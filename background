<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>ZIM - Multiuser - Code Creativity</title>

<script src="https://zimjs.org/cdn/2.3.0/socket.io.js"></script>


<script type=module>

import zim from "https://zimjs.org/cdn/016/zim_socket";

// See Docs under Frame for FIT, FILL, FULL, and TAG
new Frame(FIT, 1024, 768, light, dark, ready);
function ready() {
	
	// given F (Frame), S (Stage), W (width), H (height)
	// put code here

	 // ZIM SOCKET CONTENT - load a second window
    
    // zimSocketURL comes from the import of zim_socket
    // get the app name here: https://zimjs.com/request.html
    const appName = "multiuser";
    const socket = new Socket(zimSocketURL, appName); 

        
    socket.on("ready", function() {
        
        zogg("connected");
        // the socket.size gives the number of others in the socket (not including you)    
        
        const circle = new Circle(60, new RadialColor([white,fog],[0,1],-20,-20,0,0,0,60))
            .center()
            .mov(0,185)
            .sha();
            
        STYLE = {align:CENTER, size:series(80,30)};
        const num = new Label(socket.size + 1)
            .centerReg()
            .mov(0,190);
            
        new Label("Viewers\n(open tabs)")
            .alp(.7)
            .centerReg()
            .pos(0,300,CENTER,CENTER);  
        STYLE = {};
        
                    
        socket.on("data", function (d) {
            // normally, stuff happens in here ;-)
        });         
        
        socket.on("otherjoin", function (d) { 
            num.text = (socket.size + 1);
            S.update();
        });
        
        socket.on("otherleave", function (d) {
            // the socket is kept open a little to get leaver's data 
            // so wait a little for count to go down
            timeout(.2, () => {
                num.text = (socket.size + 1);
                S.update();
            });            
        });
        
        S.update();
    });

    socket.on("error", function () {
        num.text = "OOPS";
        S.update();
    });
	
	
		
}

</script>
<meta name="viewport" content="width=device-width, user-scalable=no" />
</head>
<body></body>
</html>
-----------------------------------------------------------------
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>ZIM - Shared - Multiuser - Code Creativity</title>

        <script src="https://zimjs.org/cdn/2.3.0/socket.io.js"></script>

<script type="module">
    import zim from "https://zimjs.org/cdn/016/zim_socket";

new Frame(FIT, 1024, 768, light, dark, ready);
function ready() {
    // Given F, S, W, H or frame, stage, stageW, stageH

    // 
    // ZIM SOCKET CONTENT - load a second window

    // zimSocketURL comes from the import of zim_socket
    // get the app name here: https://zimjs.com/request.html
    const appName = "shared";
    const socket = new Socket(zimSocketURL, appName); 

    socket.on("ready", ()=>{
        zogg("socket ready");

        const input = new TextInput().loc(50,50);
        F.on("keydown", e=>{
            if (e.key == "Enter") {
                const x = rand(W);
                const y = rand(H);
                new Label(input.text).loc(x, y);
                socket.setProperties({
                    text:input.text,
                    textX:x,
                    textY:y
                });
                input.text = "";
                S.update();
            }
        })
        

        const ball = new Circle(100, blue)
            .center()
            .drag();
        
        ball.on("pressmove", ()=>{

            socket.setProperties({
                x:Math.round(ball.x), 
                y:Math.round(ball.y)
            });
            
        });

        socket.on("data", function (data) {
            // normally, stuff happens in here ;-)
            zogo(data);

            if (data.text) {
                new Label(data.text).loc(data.textX, data.textY);
            }

            let x = socket.getLatestValue("x");
            let y = socket.getLatestValue("y"); 
            ball.loc(x, y);

            S.update();
        });      

    

        S.update();

    })
    
    

} // end ready
</script>
        <meta name="viewport" content="width=device-width, user-scalable=no" />
    </head>
    <body></body>
</html>

-----------------------------------------------------------------
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>ZIM - Mobile 1 - Code Creativity</title>
        <script type="module">

            // https://forartssake485557105.files.wordpress.com/2021/04/out-of-focus-flowers-15-03-2021-img_0320-1.jpg?w=1024
            import zim from "https://zimjs.org/cdn/016/zim";
            new Frame(FIT, 1000, 2000, clear, clear, ready);
            function ready() {
                // Given F, S, W, H or frame, stage, stageW, stageH
                
                new Tabs()
                    .siz(W)    
                    .pos(0,0,CENTER,BOTTOM)
               
               
            } // end ready
        </script>
        <meta name="viewport" content="width=device-width, user-scalable=no" />
        <style>
            body {
                background-image: url("assets/flowers.webp");
                /* background-repeat: no-repeat; */
                background-size: 100% 100%;
                min-height: 100vh;
            }
        </style>
    </head>
    <body></body>
</html>

-----------------------------------------------------------------
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>ZIM - Mobile 2 - Code Creativity</title>
        <script type="module">

            // https://forartssake485557105.files.wordpress.com/2021/04/out-of-focus-flowers-15-03-2021-img_0320-1.jpg?w=1024
            import zim from "https://zimjs.org/cdn/016/zim";
           
           
            new Frame(FULL, null, null, light, light, ready, "flowers.webp", "assets/");
            function ready() {
                // Given F, S, W, H or frame, stage, stageW, stageH

                const backing = new Pic("flowers.webp").scaleTo().center()

                const holder = new Container(1000,2000).scaleTo(S, 100,100).center().outline();

                new Circle().center(holder).drag();
                
                new Tabs()
                    .siz(1000)    
                    .pos(0,0,CENTER,BOTTOM,holder)

                F.on("resize", ()=>{
                    backing.scaleTo().center();
                    holder.scaleTo(S, 100,100).center().outline();
                })

                
               
               
            } // end ready
        </script>
        <meta name="viewport" content="width=device-width, user-scalable=no" />
    </head>
    <body></body>
</html>

-----------------------------------------------------------------
<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>ZIM - Mobile 3 - Code Creativity</title>
        <script type="module">

            // https://forartssake485557105.files.wordpress.com/2021/04/out-of-focus-flowers-15-03-2021-img_0320-1.jpg?w=1024
            import zim from "https://zimjs.org/cdn/016/zim";
           
           
            new Frame(FULL, null, null, light, light, ready, "gf_Anta");
            function ready() {
                // Given F, S, W, H or frame, stage, stageW, stageH
                
                
                STYLE = {backgroundColor:orange, once:true}
                const logo = new Label("LOOGOO", 50, "Anta", purple).addTo();

                const rect = new Rectangle(null,null,yellow).addTo();

                const tabs = new Tabs().addTo();

                new Grid();
                                   
                F.on("resize", ()=>{

                    logo
                        .siz(null, H*.1)
                        .siz(constrain(logo.width, W*.2, W*.8))
                        .pos(0,H*.05,CENTER)

                    // make the tabs go across the bottom
                    // const min = H*.05;
                    // const max = H*.15;  
                    // let h = tabs.height;
                    // h = Math.min(max, Math.max(min, h))

                    tabs
                        .siz(W*.8)
                        .siz(null, constrain(tabs.height, H*.05, H*.10))
                        .pos(0, H*.05 ,CENTER,BOTTOM);                                   
                   
                    rect.siz(W*.8, H*.6).pos(W*.1, H*.2);

                    

                });       
                
               
               
            } // end ready
        </script>
        <meta name="viewport" content="width=device-width, user-scalable=no" />
    </head>
    <body></body>
</html>